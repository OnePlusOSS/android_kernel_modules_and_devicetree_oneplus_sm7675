/* SPDX-License-Identifier: GPL-2.0-only */
/*
 * Copyright (c) 2020-2021, The Linux Foundation. All rights reserved.
 * Copyright (c) 2022-2024, Qualcomm Innovation Center, Inc. All rights reserved.
 */

#ifndef _CAM_IFE_CSID_LITE_880_H_
#define _CAM_IFE_CSID_LITE_880_H_

#include "cam_ife_csid_common.h"
#include "cam_ife_csid_dev.h"
#include "cam_ife_csid_hw_ver2.h"
#include "cam_irq_controller.h"
#include "cam_isp_hw_mgr_intf.h"

/* Offsets might not match due to csid secure regs at beginning of reg space */

static const struct cam_ife_csid_irq_desc cam_ife_csid_lite_880_rx_irq_desc[][32] = {
	{
		{
			.bitmask = BIT(0),
			.desc = "DL0_EOT",
		},
		{
			.bitmask = BIT(1),
			.desc = "DL1_EOT",
		},
		{
			.bitmask = BIT(2),
			.desc = "DL2_EOT",
		},
		{
			.bitmask = BIT(3),
			.desc = "DL3_EOT",
		},
		{
			.bitmask = BIT(4),
			.desc = "DL0_SOT",
		},
		{
			.bitmask = BIT(5),
			.desc = "DL1_SOT",
		},
		{
			.bitmask = BIT(6),
			.desc = "DL2_SOT",
		},
		{
			.bitmask = BIT(7),
			.desc = "DL3_SOT",
		},
		{
			.bitmask = BIT(8),
			.desc = "LONG_PKT",
		},
		{
			.bitmask = BIT(9),
			.desc = "SHORT_PKT",
		},
		{
			.bitmask = BIT(10),
			.desc = "CPHY_PKT_HDR",
		},
		{
			.bitmask = BIT(11),
			.desc = "ERROR_CPHY_EOT_RECEPTION",
		},
		{
			.bitmask = BIT(12),
			.desc = "ERROR_CPHY_SOT_RECEPTION",
		},
		{
			.bitmask = BIT(13),
			.desc = "ERROR_CPHY_PH_CRC",
		},
		{
			.bitmask = BIT(14),
			.desc = "WARNING_ECC",
		},
		{
			.bitmask = BIT(15),
			.desc = "ERROR_LANE0_FIFO_OVERFLOW",
		},
		{
			.bitmask = BIT(16),
			.desc = "ERROR_LANE1_FIFO_OVERFLOW",
		},
		{
			.bitmask = BIT(17),
			.desc = "ERROR_LANE2_FIFO_OVERFLOW",
		},
		{
			.bitmask = BIT(18),
			.desc = "ERROR_LANE3_FIFO_OVERFLOW",
		},
		{
			.bitmask = BIT(19),
			.desc = "ERROR_CRC",
		},
		{
			.bitmask = BIT(20),
			.desc = "ERROR_ECC",
		},
		{
			.bitmask = BIT(21),
			.desc = "ERROR_MMAPPED_VC_DT",
		},
		{
			.bitmask = BIT(22),
			.desc = "ERROR_UNMAPPED_VC_DT",
		},
		{
			.bitmask = BIT(23),
			.desc = "ERROR_STREAM_UNDERFLOW",
		},
		{
			.bitmask = BIT(24),
			.desc = "ERROR_UNBOUNDED_FRAME",
		},
		{
			.bitmask = BIT(25),
			.desc = "ERROR_ILLEGAL_PROGRAMMING_IRQ",
		},
		{
			.bitmask = BIT(26),
			.desc = "INFO_SENSOR_MODE_ID_CHANGE_IRQ",
		},
	},
};

static const struct cam_ife_csid_irq_desc cam_ife_csid_lite_880_path_irq_desc[] = {
	{
		.bitmask = BIT(0),
		.err_type = CAM_ISP_HW_ERROR_CSID_FATAL,
		.desc = "ILLEGAL_PROGRAMMING",
		.err_handler = cam_ife_csid_ver2_print_illegal_programming_irq_status,
	},
	{
		.bitmask = BIT(1),
		.desc = "EROOR_MSG_FIFO_OVERFLOW",
	},
	{
		.bitmask = BIT(2),
		.desc = "ERROR_FIFO_OVERFLOW",
	},
	{
		.bitmask = BIT(3),
		.desc = "CAMIF_EOF",
	},
	{
		.bitmask = BIT(4),
		.desc = "CAMIF_SOF",
	},
	{
		.bitmask = BIT(5),
		.desc = "FRAME_DROP_EOF",
	},
	{
		.bitmask = BIT(6),
		.desc = "FRAME_DROP_EOL",
	},
	{
		.bitmask = BIT(7),
		.desc = "FRAME_DROP_SOL",
	},
	{
		.bitmask = BIT(8),
		.desc = "FRAME_DROP_SOF",
	},
	{
		.bitmask = BIT(9),
		.desc = "INFO_INPUT_EOF",
	},
	{
		.bitmask = BIT(10),
		.desc = "INFO_INPUT_EOL",
	},
	{
		.bitmask = BIT(11),
		.desc = "INFO_INPUT_SOL",
	},
	{
		.bitmask = BIT(12),
		.desc = "INFO_INPUT_SOF",
	},
	{
		.bitmask = BIT(13),
		.err_type = CAM_ISP_HW_ERROR_CSID_FRAME_SIZE,
		.desc = "ERROR_PIX_COUNT",
		.err_handler = cam_ife_csid_ver2_print_format_measure_info,
	},
	{
		.bitmask = BIT(14),
		.err_type = CAM_ISP_HW_ERROR_CSID_FRAME_SIZE,
		.desc = "ERROR_LINE_COUNT",
		.err_handler = cam_ife_csid_ver2_print_format_measure_info,
	},
	{
		.bitmask = BIT(15),
		.desc = "VCDT_GRP0_SEL",
	},
	{
		.bitmask = BIT(16),
		.desc = "VCDT_GRP1_SEL",
	},
	{
		.bitmask = BIT(17),
		.desc = "VCDT_GRP_CHANGE",
	},
	{
		.bitmask = BIT(18),
		.desc = "FRAME_DROP",
	},
	{
		.bitmask = BIT(19),
		.err_type = CAM_ISP_HW_ERROR_RECOVERY_OVERFLOW,
		.desc = "OVERFLOW_RECOVERY: Back pressure/output fifo ovrfl",
	},
	{
		.bitmask = BIT(20),
		.desc = "ERROR_REC_CCIF_VIOLATION From Camif",
	},
	{
		.bitmask = BIT(21),
		.desc = "CAMIF_EPOCH0",
	},
	{
		.bitmask = BIT(22),
		.desc = "CAMIF_EPOCH1",
	},
	{
		.bitmask = BIT(23),
		.desc = "RUP_DONE",
	},
	{
		.bitmask = BIT(24),
		.desc = "ILLEGAL_BATCH_ID",
	},
	{
		.bitmask = BIT(25),
		.desc = "BATCH_END_MISSING_VIOLATION",
	},
	{
		.bitmask = BIT(26),
		.desc = "HEIGHT_VIOLATION",
	},
	{
		.bitmask = BIT(27),
		.desc = "WIDTH_VIOLATION",
	},
	{
		.bitmask = BIT(28),
		.desc = "SENSOR_SWITCH_OUT_OF_SYNC_FRAME_DROP",
		.err_handler = cam_ife_csid_hw_ver2_mup_mismatch_handler,
	},
	{
		.bitmask = BIT(29),
		.desc = "CCIF_VIOLATION: Bad frame timings",
	},
};

static const struct cam_ife_csid_top_irq_desc cam_ife_csid_lite_880_top_irq_desc[][32] = {
	{
		{
			.bitmask  = BIT(1),
			.err_type = CAM_ISP_HW_ERROR_CSID_SENSOR_SWITCH_ERROR,
			.err_name = "FATAL_SENSOR_SWITCHING_IRQ",
			.desc = "Fatal Error duirng dynamically switching between 2 sensors",
		},
		{
			.bitmask  = BIT(18),
			.err_type = CAM_ISP_HW_ERROR_RECOVERY_OVERFLOW,
			.err_name = "ERROR_NO_VOTE_DN",
			.desc = "vote_up is asserted before IDLE is encountered in a frame",
		},
		{
			.bitmask  = BIT(19),
			.err_type = CAM_ISP_HW_ERROR_RECOVERY_OVERFLOW,
			.err_name = "ERROR_VOTE_UP_LATE",
			.desc = "vote_up is asserted at the same time as an SOF",
		},
		{
			.bitmask  = BIT(20),
			.err_type = CAM_ISP_HW_ERROR_CSID_OUTPUT_FIFO_OVERFLOW,
			.err_name = "ERROR_RDI_LINE_BUFFER_CONFLICT",
			.desc = "Two or more RDIs programmed to access the shared line buffer",
			.err_handler = cam_ife_csid_hw_ver2_rdi_line_buffer_conflict_handler,
		},
	},
};

static const uint32_t cam_ife_csid_lite_880_num_top_irq_desc[] = {
	ARRAY_SIZE(cam_ife_csid_lite_880_top_irq_desc[0]),
};
static const uint32_t cam_ife_csid_lite_880_num_rx_irq_desc[] = {
	ARRAY_SIZE(cam_ife_csid_lite_880_rx_irq_desc[0]),
};

static struct cam_irq_register_set cam_ife_csid_lite_880_irq_reg_set[9] = {
	/* Top */
	{
		.mask_reg_offset   = 0x00000080,
		.clear_reg_offset  = 0x00000084,
		.status_reg_offset = 0x0000007C,
		.set_reg_offset    = 0x00000088,
		.test_set_val      = BIT(0),
		.test_sub_val      = BIT(0),
	},
	/* RX */
	{
		.mask_reg_offset   = 0x000000A0,
		.clear_reg_offset  = 0x000000A4,
		.status_reg_offset = 0x0000009C,
	},
	/* RDI0 */
	{
		.mask_reg_offset   = 0x000000F0,
		.clear_reg_offset  = 0x000000F4,
		.status_reg_offset = 0x000000EC,
	},
	/* RDI1 */
	{
		.mask_reg_offset   = 0x00000100,
		.clear_reg_offset  = 0x00000104,
		.status_reg_offset = 0x000000FC,
	},
	/* RDI2 */
	{
		.mask_reg_offset   = 0x00000110,
		.clear_reg_offset  = 0x00000114,
		.status_reg_offset = 0x0000010C,
	},
	/* RDI3 */
	{
		.mask_reg_offset   = 0x00000120,
		.clear_reg_offset  = 0x00000124,
		.status_reg_offset = 0x0000011C,
	},
	{}, /* no RDI4 */
	/* IPP */
	{
		.mask_reg_offset   = 0x000000B0,
		.clear_reg_offset  = 0x000000B4,
		.status_reg_offset = 0x000000AC,
	},
	{}, /* no PPP */
};

static struct cam_irq_controller_reg_info cam_ife_csid_lite_880_top_irq_reg_info = {
	.num_registers = 1,
	.irq_reg_set = &cam_ife_csid_lite_880_irq_reg_set[CAM_IFE_CSID_IRQ_REG_TOP],
	.global_irq_cmd_offset = 0x00000014,
	.global_set_bitmask    = 0x00000010,
	.global_clear_bitmask  = 0x00000001,
	.clear_all_bitmask     = 0xFFFFFFFF,
};

static struct cam_irq_controller_reg_info cam_ife_csid_lite_880_rx_irq_reg_info = {
	.num_registers = 1,
	.irq_reg_set = &cam_ife_csid_lite_880_irq_reg_set[CAM_IFE_CSID_IRQ_REG_RX], /* RX */
	.global_irq_cmd_offset = 0,
};

static struct cam_irq_controller_reg_info cam_ife_csid_lite_880_path_irq_reg_info[6] = {
	{
		.num_registers = 1,
		.irq_reg_set = &cam_ife_csid_lite_880_irq_reg_set[CAM_IFE_CSID_IRQ_REG_RDI_0],
		.global_irq_cmd_offset = 0,
	},
	{
		.num_registers = 1,
		.irq_reg_set = &cam_ife_csid_lite_880_irq_reg_set[CAM_IFE_CSID_IRQ_REG_RDI_1],
		.global_irq_cmd_offset = 0,
	},
	{
		.num_registers = 1,
		.irq_reg_set = &cam_ife_csid_lite_880_irq_reg_set[CAM_IFE_CSID_IRQ_REG_RDI_2],
		.global_irq_cmd_offset = 0,
	},
	{
		.num_registers = 1,
		.irq_reg_set = &cam_ife_csid_lite_880_irq_reg_set[CAM_IFE_CSID_IRQ_REG_RDI_3],
		.global_irq_cmd_offset = 0,
	},
	{}, /* no RDI4 */
	{
		.num_registers = 1,
		.irq_reg_set = &cam_ife_csid_lite_880_irq_reg_set[CAM_IFE_CSID_IRQ_REG_IPP],
		.global_irq_cmd_offset = 0,
	},
};

static struct cam_irq_register_set cam_ife_csid_lite_880_buf_done_irq_reg_set[1] = {
	{
		.mask_reg_offset   = 0x00000090,
		.clear_reg_offset  = 0x00000094,
		.status_reg_offset = 0x0000008C,
	},
};

static struct cam_irq_controller_reg_info
	cam_ife_csid_lite_880_buf_done_irq_reg_info = {
	.num_registers = 1,
	.irq_reg_set = cam_ife_csid_lite_880_buf_done_irq_reg_set,
	.global_irq_cmd_offset  = 0, /* intentionally set to zero */
};

static struct cam_ife_csid_ver2_common_reg_info
			cam_ife_csid_lite_880_cmn_reg_info = {
	.hw_version_addr                              = 0x0000,
	.cfg0_addr                                    = 0x0004,
	.global_cmd_addr                              = 0x0008,
	.reset_cfg_addr                               = 0x000c,
	.reset_cmd_addr                               = 0x0010,
	.irq_cmd_addr                                 = 0x0014,
	.rup_aup_cmd_addr                             = 0x0018,
	.offline_cmd_addr                             = 0x001C,
	.shdr_master_slave_cfg_addr                   = 0x0020,
	.top_irq_status_addr                          = {0x007C,},
	.top_irq_mask_addr                            = {0x0080,},
	.top_irq_clear_addr                           = {0x0084,},
	.top_irq_set_addr                             = {0x0088,},
	.buf_done_irq_status_addr                     = 0x008C,
	.buf_done_irq_mask_addr                       = 0x0090,
	.buf_done_irq_clear_addr                      = 0x0094,
	.buf_done_irq_set_addr                        = 0x0098,

	/*configurations */
	.major_version                                = 6,
	.minor_version                                = 8,
	.version_incr                                 = 0,
	.num_rdis                                     = 4,
	.num_pix                                      = 1,
	.num_ppp                                      = 0,
	.rst_done_shift_val                           = 1,
	.path_en_shift_val                            = 31,
	.dt_id_shift_val                              = 27,
	.vc_shift_val                                 = 22,
	.vc_mask                                      = 0x1F,
	.dt_shift_val                                 = 16,
	.dt_mask                                      = 0x3F,
	.crop_shift_val                               = 16,
	.decode_format_shift_val                      = 12,
	.decode_format1_shift_val                     = 16,
	.decode_format_mask                           = 0xF,
	.decode_format1_supported                     = true,
	.frame_id_decode_en_shift_val                 = 1,
	.multi_vcdt_vc1_shift_val                     = 2,
	.multi_vcdt_dt1_shift_val                     = 7,
	.multi_vcdt_ts_combo_en_shift_val             = 13,
	.multi_vcdt_en_shift_val                      = 0,
	.timestamp_stb_sel_shift_val                  = 8,
	.vfr_en_shift_val                             = 0,
	.mup_shift_val                                = 28,
	.early_eof_supported                          = 1,
	.vfr_supported                                = 1,
	.multi_vcdt_supported                         = 1,
	.ts_comb_vcdt_en                              = true,
	.ts_comb_vcdt_mask                            = 3,
	.frame_id_dec_supported                       = 1,
	.measure_en_hbi_vbi_cnt_mask                  = 0xc,
	.measure_pixel_line_en_mask                   = 0x3,
	.crop_pix_start_mask                          = 0x3fff,
	.crop_pix_end_mask                            = 0xffff,
	.crop_line_start_mask                         = 0x3fff,
	.crop_line_end_mask                           = 0xffff,
	.drop_supported                               = 1,
	.ipp_irq_mask_all                             = 0x7FFF,
	.rdi_irq_mask_all                             = 0x7FFF,
	.rst_loc_path_only_val                        = 0x0,
	.rst_location_shift_val                       = 4,
	.rst_loc_complete_csid_val                    = 0x1,
	.rst_mode_frame_boundary_val                  = 0x0,
	.rst_mode_immediate_val                       = 0x1,
	.rst_cmd_hw_reset_complete_val                = 0x1,
	.rst_cmd_sw_reset_complete_val                = 0x2,
	.rst_cmd_irq_ctrl_only_val                    = 0x4,
	.timestamp_strobe_val                         = 0x2,
	.global_reset                                 = 1,
	.rup_supported                                = 1,
	.only_master_rup                              = 1,
	.format_measure_height_mask_val               = 0xFFFF,
	.format_measure_height_shift_val              = 0x10,
	.format_measure_width_mask_val                = 0xFFFF,
	.format_measure_width_shift_val               = 0x0,
	.top_reset_irq_mask                           = {0x1,},
	.top_buf_done_irq_mask                        = 0x2000,
	.decode_format_payload_only                   = 0xF,
	.phy_sel_base_idx                             = 1,
	.timestamp_enabled_in_cfg0                    = true,
	.camif_irq_support                            = true,
};

static struct cam_ife_csid_ver2_csi2_rx_reg_info
	cam_ife_csid_lite_880_csi2_reg_info = {
		.irq_status_addr                      = {0x009C,},
		.irq_mask_addr                        = {0x00A0,},
		.irq_clear_addr                       = {0x00A4,},
		.irq_set_addr                         = {0x00A8,},
		/*CSI2 rx control */
		.cfg0_addr                            = 0x0200,
		.cfg1_addr                            = 0x0204,
		.capture_ctrl_addr                    = 0x0208,
		.rst_strobes_addr                     = 0x020C,
		.cap_unmap_long_pkt_hdr_0_addr        = 0x0210,
		.cap_unmap_long_pkt_hdr_1_addr        = 0x0214,
		.captured_short_pkt_0_addr            = 0x0218,
		.captured_short_pkt_1_addr            = 0x021c,
		.captured_long_pkt_0_addr             = 0x0220,
		.captured_long_pkt_1_addr             = 0x0224,
		.captured_long_pkt_ftr_addr           = 0x0228,
		.captured_cphy_pkt_hdr_addr           = 0x022c,
		.lane0_misr_addr                      = 0x0230,
		.lane1_misr_addr                      = 0x0234,
		.lane2_misr_addr                      = 0x0238,
		.lane3_misr_addr                      = 0x023c,
		.total_pkts_rcvd_addr                 = 0x0240,
		.stats_ecc_addr                       = 0x0244,
		.total_crc_err_addr                   = 0x0248,
		.de_scramble_type3_cfg0_addr          = 0x024C,
		.de_scramble_type3_cfg1_addr          = 0x0250,
		.de_scramble_type2_cfg0_addr          = 0x0254,
		.de_scramble_type2_cfg1_addr          = 0x0258,
		.de_scramble_type1_cfg0_addr          = 0x025C,
		.de_scramble_type1_cfg1_addr          = 0x0260,
		.de_scramble_type0_cfg0_addr          = 0x0264,
		.de_scramble_type0_cfg1_addr          = 0x0268,

		.rst_done_shift_val                   = 27,
		.irq_mask_all                         = 0xFFFFFFF,
		.misr_enable_shift_val                = 6,
		.vc_mode_shift_val                    = 2,
		.capture_long_pkt_en_shift            = 0,
		.capture_short_pkt_en_shift           = 1,
		.capture_cphy_pkt_en_shift            = 2,
		.capture_long_pkt_dt_shift            = 4,
		.capture_long_pkt_vc_shift            = 10,
		.capture_short_pkt_vc_shift           = 15,
		.capture_cphy_pkt_dt_shift            = 20,
		.capture_cphy_pkt_vc_shift            = 26,
		.phy_num_mask                         = 0xf,
		.vc_mask                              = 0x7C00000,
		.dt_mask                              = 0x3f0000,
		.wc_mask                              = 0xffff,
		.vc_shift                             = 0x16,
		.dt_shift                             = 0x10,
		.wc_shift                             = 0,
		.calc_crc_mask                        = 0xffff,
		.expected_crc_mask                    = 0xffff,
		.calc_crc_shift                       = 0x10,
		.ecc_correction_shift_en              = 0,
		.lane_num_shift                       = 0,
		.lane_cfg_shift                       = 4,
		.phy_type_shift                       = 24,
		.phy_num_shift                        = 20,
		.tpg_mux_en_shift                     = 27,
		.tpg_num_sel_shift                    = 28,
		.phy_bist_shift_en                    = 7,
		.epd_mode_shift_en                    = 8,
		.eotp_shift_en                        = 9,
		.dyn_sensor_switch_shift_en           = 10,
		.rup_aup_latch_shift                  = 13,
		.rup_aup_latch_supported              = true,
		.long_pkt_strobe_rst_shift            = 0,
		.short_pkt_strobe_rst_shift           = 1,
		.cphy_pkt_strobe_rst_shift            = 2,
		.unmapped_pkt_strobe_rst_shift        = 3,
		.top_irq_mask                         = {0x4,},
		.fatal_err_mask                       = {0x19FA800,},
		.part_fatal_err_mask                  = {0x0001000,},
		.non_fatal_err_mask                   = {0x0200000,},
};

static struct cam_ife_csid_ver2_path_reg_info
	cam_ife_csid_lite_880_ipp_reg_info = {
		.irq_status_addr                      = 0x00AC,
		.irq_mask_addr                        = 0x00B0,
		.irq_clear_addr                       = 0x00B4,
		.irq_set_addr                         = 0x00B8,
		.cfg0_addr                            = 0x0300,
		.ctrl_addr                            = 0x0304,
		.debug_clr_cmd_addr                   = 0x0308,
		.multi_vcdt_cfg0_addr                 = 0x030c,
		.cfg1_addr                            = 0x0310,
		.err_recovery_cfg0_addr               = 0x0318,
		.err_recovery_cfg1_addr               = 0x031C,
		.err_recovery_cfg2_addr               = 0x0320,
		.camif_frame_cfg_addr                 = 0x0330,
		.epoch_irq_cfg_addr                   = 0x0334,
		.epoch0_subsample_ptrn_addr           = 0x0338,
		.epoch1_subsample_ptrn_addr           = 0x033C,
		.debug_camif_1_addr                   = 0x0340,
		.debug_camif_0_addr                   = 0x0344,
		.debug_halt_status_addr               = 0x0348,
		.debug_misr_val0_addr                 = 0x034C,
		.debug_misr_val1_addr                 = 0x0350,
		.debug_misr_val2_addr                 = 0x0354,
		.debug_misr_val3_addr                 = 0x0358,
		.hcrop_addr                           = 0x035c,
		.vcrop_addr                           = 0x0360,
		.pix_drop_pattern_addr                = 0x0364,
		.pix_drop_period_addr                 = 0x0368,
		.line_drop_pattern_addr               = 0x036C,
		.line_drop_period_addr                = 0x0370,
		.frm_drop_pattern_addr                = 0x0374,
		.frm_drop_period_addr                 = 0x0378,
		.irq_subsample_pattern_addr           = 0x037C,
		.irq_subsample_period_addr            = 0x0380,
		.format_measure_cfg0_addr             = 0x0384,
		.format_measure_cfg1_addr             = 0x0388,
		.format_measure0_addr                 = 0x038C,
		.format_measure1_addr                 = 0x0390,
		.format_measure2_addr                 = 0x0394,
		.timestamp_curr0_sof_addr             = 0x0398,
		.timestamp_curr1_sof_addr             = 0x039C,
		.timestamp_perv0_sof_addr             = 0x03A0,
		.timestamp_perv1_sof_addr             = 0x03A4,
		.timestamp_curr0_eof_addr             = 0x03A8,
		.timestamp_curr1_eof_addr             = 0x03AC,
		.timestamp_perv0_eof_addr             = 0x03B0,
		.timestamp_perv1_eof_addr             = 0x03B4,
		.batch_period_cfg_addr                = 0x03C4,
		.batch_stream_id_cfg_addr             = 0x03C8,
		.epoch0_cfg_batch_id0_addr            = 0x03CC,
		.epoch1_cfg_batch_id0_addr            = 0x03D0,
		.epoch0_cfg_batch_id1_addr            = 0x03D4,
		.epoch1_cfg_batch_id1_addr            = 0x03D8,
		.epoch0_cfg_batch_id2_addr            = 0x03DC,
		.epoch1_cfg_batch_id2_addr            = 0x03E0,
		.epoch0_cfg_batch_id3_addr            = 0x03E4,
		.epoch1_cfg_batch_id3_addr            = 0x03E8,
		.epoch0_cfg_batch_id4_addr            = 0x03EC,
		.epoch1_cfg_batch_id4_addr            = 0x03F0,
		.epoch0_cfg_batch_id5_addr            = 0x03F4,
		.epoch1_cfg_batch_id5_addr            = 0x03F8,

		/* configurations */
		.start_mode_internal                  = 0x0,
		.start_mode_global                    = 0x1,
		.start_mode_master                    = 0x2,
		.start_mode_slave                     = 0x3,
		.start_mode_shift                     = 2,
		.start_master_sel_val                 = 0,
		.start_master_sel_shift               = 4,
		.resume_frame_boundary                = 1,
		.crop_v_en_shift_val                  = 13,
		.crop_h_en_shift_val                  = 12,
		.drop_v_en_shift_val                  = 11,
		.drop_h_en_shift_val                  = 10,
		.pix_store_en_shift_val               = 14,
		.early_eof_en_shift_val               = 16,
		.format_measure_en_shift_val          = 8,
		.timestamp_en_shift_val               = 6,
		.overflow_ctrl_en                     = 1,
		.overflow_ctrl_mode_val               = 0x8,
		.min_hbi_shift_val                    = 4,
		.start_master_sel_shift_val           = 4,
		.fatal_err_mask                       = 0x20186001,
		.non_fatal_err_mask                   = 0x12000004,
		.sof_irq_mask                         = 0x10,
		.rup_irq_mask                         = 0x800000,
		.epoch0_irq_mask                      = 0x200000,
		.epoch1_irq_mask                      = 0x400000,
		.eof_irq_mask                         = 0x8,
		.rup_aup_mask                         = 0x10001,
		.top_irq_mask                         = {0x10,},
};

static struct cam_ife_csid_ver2_path_reg_info
	cam_ife_csid_lite_880_rdi_0_reg_info = {
		.irq_status_addr                     = 0x00EC,
		.irq_mask_addr                       = 0x00F0,
		.irq_clear_addr                      = 0x00F4,
		.irq_set_addr                        = 0x00F8,
		.cfg0_addr                           = 0x0500,
		.ctrl_addr                           = 0x0504,
		.debug_clr_cmd_addr                  = 0x0508,
		.multi_vcdt_cfg0_addr                = 0x050c,
		.cfg1_addr                           = 0x0510,
		.err_recovery_cfg0_addr              = 0x0514,
		.err_recovery_cfg1_addr              = 0x0518,
		.err_recovery_cfg2_addr              = 0x051C,
		.debug_byte_cntr_ping_addr           = 0x0520,
		.debug_byte_cntr_pong_addr           = 0x0524,
		.camif_frame_cfg_addr                = 0x0528,
		.epoch_irq_cfg_addr                  = 0x052C,
		.epoch0_subsample_ptrn_addr          = 0x0530,
		.epoch1_subsample_ptrn_addr          = 0x0534,
		.debug_camif_1_addr                  = 0x0538,
		.debug_camif_0_addr                  = 0x053C,
		.frm_drop_pattern_addr               = 0x0540,
		.frm_drop_period_addr                = 0x0540,
		.irq_subsample_pattern_addr          = 0x0548,
		.irq_subsample_period_addr           = 0x054C,
		.hcrop_addr                          = 0x0550,
		.vcrop_addr                          = 0x0554,
		.pix_drop_pattern_addr               = 0x0558,
		.pix_drop_period_addr                = 0x055C,
		.line_drop_pattern_addr              = 0x0560,
		.line_drop_period_addr               = 0x0564,
		.debug_halt_status_addr              = 0x0568,
		.debug_misr_val0_addr                = 0x0570,
		.debug_misr_val1_addr                = 0x0574,
		.debug_misr_val2_addr                = 0x0578,
		.debug_misr_val3_addr                = 0x057C,
		.format_measure_cfg0_addr            = 0x0580,
		.format_measure_cfg1_addr            = 0x0584,
		.format_measure0_addr                = 0x0588,
		.format_measure1_addr                = 0x058C,
		.format_measure2_addr                = 0x0590,
		.timestamp_curr0_sof_addr            = 0x0594,
		.timestamp_curr1_sof_addr            = 0x0598,
		.timestamp_perv0_sof_addr            = 0x059C,
		.timestamp_perv1_sof_addr            = 0x05A0,
		.timestamp_curr0_eof_addr            = 0x05A4,
		.timestamp_curr1_eof_addr            = 0x05A8,
		.timestamp_perv0_eof_addr            = 0x05AC,
		.timestamp_perv1_eof_addr            = 0x05B0,
		.batch_period_cfg_addr               = 0x05BC,
		.batch_stream_id_cfg_addr            = 0x05C0,
		.epoch0_cfg_batch_id0_addr           = 0x05C4,
		.epoch1_cfg_batch_id0_addr           = 0x05C8,
		.epoch0_cfg_batch_id1_addr           = 0x05CC,
		.epoch1_cfg_batch_id1_addr           = 0x05D0,
		.epoch0_cfg_batch_id2_addr           = 0x05D4,
		.epoch1_cfg_batch_id2_addr           = 0x05D8,
		.epoch0_cfg_batch_id3_addr           = 0x05DC,
		.epoch1_cfg_batch_id3_addr           = 0x05E0,
		.epoch0_cfg_batch_id4_addr           = 0x05E4,
		.epoch1_cfg_batch_id4_addr           = 0x05E8,
		.epoch0_cfg_batch_id5_addr           = 0x05EC,
		.epoch1_cfg_batch_id5_addr           = 0x05F0,

		/* configurations */
		.resume_frame_boundary               = 1,
		.overflow_ctrl_en                    = 1,
		.overflow_ctrl_mode_val              = 0x8,
		.mipi_pack_supported                 = 1,
		.packing_fmt_shift_val               = 15,
		.plain_alignment_shift_val           = 11,
		.plain_fmt_shift_val                 = 12,
		.crop_v_en_shift_val                 = 8,
		.crop_h_en_shift_val                 = 7,
		.drop_v_en_shift_val                 = 6,
		.drop_h_en_shift_val                 = 5,
		.early_eof_en_shift_val              = 14,
		.format_measure_en_shift_val         = 3,
		.timestamp_en_shift_val              = 6,
		.debug_byte_cntr_rst_shift_val       = 2,
		.ccif_violation_en                   = 1,
		.fatal_err_mask                      = 0x20186001,
		.non_fatal_err_mask                  = 0x12000004,
		.sof_irq_mask                        = 0x10,
		.rup_irq_mask                        = 0x800000,
		.epoch0_irq_mask                     = 0x200000,
		.epoch1_irq_mask                     = 0x400000,
		.eof_irq_mask                        = 0x8,
		.rup_aup_mask                        = 0x100010,
		.top_irq_mask                        = {0x100,},
};

static struct cam_ife_csid_ver2_path_reg_info
	cam_ife_csid_lite_880_rdi_1_reg_info = {
		.irq_status_addr                     = 0x00FC,
		.irq_mask_addr                       = 0x0100,
		.irq_clear_addr                      = 0x0104,
		.irq_set_addr                        = 0x0108,
		.cfg0_addr                           = 0x0600,
		.ctrl_addr                           = 0x0604,
		.debug_clr_cmd_addr                  = 0x0608,
		.multi_vcdt_cfg0_addr                = 0x060c,
		.cfg1_addr                           = 0x0610,
		.err_recovery_cfg0_addr              = 0x0614,
		.err_recovery_cfg1_addr              = 0x0618,
		.err_recovery_cfg2_addr              = 0x061C,
		.debug_byte_cntr_ping_addr           = 0x0620,
		.debug_byte_cntr_pong_addr           = 0x0624,
		.camif_frame_cfg_addr                = 0x0628,
		.epoch_irq_cfg_addr                  = 0x062C,
		.epoch0_subsample_ptrn_addr          = 0x0630,
		.epoch1_subsample_ptrn_addr          = 0x0634,
		.debug_camif_1_addr                  = 0x0638,
		.debug_camif_0_addr                  = 0x063C,
		.frm_drop_pattern_addr               = 0x0640,
		.frm_drop_period_addr                = 0x0644,
		.irq_subsample_pattern_addr          = 0x0648,
		.irq_subsample_period_addr           = 0x064C,
		.hcrop_addr                          = 0x0650,
		.vcrop_addr                          = 0x0654,
		.pix_drop_pattern_addr               = 0x0658,
		.pix_drop_period_addr                = 0x065C,
		.line_drop_pattern_addr              = 0x0660,
		.line_drop_period_addr               = 0x0664,
		.debug_halt_status_addr              = 0x066C,
		.debug_misr_val0_addr                = 0x0670,
		.debug_misr_val1_addr                = 0x0674,
		.debug_misr_val2_addr                = 0x0678,
		.debug_misr_val3_addr                = 0x067C,
		.format_measure_cfg0_addr            = 0x0680,
		.format_measure_cfg1_addr            = 0x0684,
		.format_measure0_addr                = 0x0688,
		.format_measure1_addr                = 0x068C,
		.format_measure2_addr                = 0x0690,
		.timestamp_curr0_sof_addr            = 0x0694,
		.timestamp_curr1_sof_addr            = 0x0698,
		.timestamp_perv0_sof_addr            = 0x069C,
		.timestamp_perv1_sof_addr            = 0x06A0,
		.timestamp_curr0_eof_addr            = 0x06A4,
		.timestamp_curr1_eof_addr            = 0x06A8,
		.timestamp_perv0_eof_addr            = 0x06AC,
		.timestamp_perv1_eof_addr            = 0x06B0,
		.batch_period_cfg_addr               = 0x06BC,
		.batch_stream_id_cfg_addr            = 0x06C0,
		.epoch0_cfg_batch_id0_addr           = 0x06C4,
		.epoch1_cfg_batch_id0_addr           = 0x06C8,
		.epoch0_cfg_batch_id1_addr           = 0x06CC,
		.epoch1_cfg_batch_id1_addr           = 0x06D0,
		.epoch0_cfg_batch_id2_addr           = 0x06D4,
		.epoch1_cfg_batch_id2_addr           = 0x06D8,
		.epoch0_cfg_batch_id3_addr           = 0x06DC,
		.epoch1_cfg_batch_id3_addr           = 0x06E0,
		.epoch0_cfg_batch_id4_addr           = 0x06E4,
		.epoch1_cfg_batch_id4_addr           = 0x06E8,
		.epoch0_cfg_batch_id5_addr           = 0x06EC,
		.epoch1_cfg_batch_id5_addr           = 0x06F0,

		/* configurations */
		.resume_frame_boundary               = 1,
		.overflow_ctrl_en                    = 1,
		.overflow_ctrl_mode_val              = 0x8,
		.mipi_pack_supported                 = 1,
		.packing_fmt_shift_val               = 15,
		.plain_alignment_shift_val           = 11,
		.plain_fmt_shift_val                 = 12,
		.crop_v_en_shift_val                 = 8,
		.crop_h_en_shift_val                 = 7,
		.drop_v_en_shift_val                 = 6,
		.drop_h_en_shift_val                 = 5,
		.early_eof_en_shift_val              = 14,
		.format_measure_en_shift_val         = 3,
		.timestamp_en_shift_val              = 6,
		.debug_byte_cntr_rst_shift_val       = 2,
		.ccif_violation_en                   = 1,
		.fatal_err_mask                      = 0x20186001,
		.non_fatal_err_mask                  = 0x12000004,
		.sof_irq_mask                        = 0x10,
		.rup_irq_mask                        = 0x800000,
		.epoch0_irq_mask                     = 0x200000,
		.epoch1_irq_mask                     = 0x400000,
		.eof_irq_mask                        = 0x8,
		.rup_aup_mask                        = 0x200020,
		.top_irq_mask                        = {0x200,},
};

static struct cam_ife_csid_ver2_path_reg_info
	cam_ife_csid_lite_880_rdi_2_reg_info = {
		.irq_status_addr                     = 0x010C,
		.irq_mask_addr                       = 0x0110,
		.irq_clear_addr                      = 0x0114,
		.irq_set_addr                        = 0x0118,
		.cfg0_addr                           = 0x0700,
		.ctrl_addr                           = 0x0704,
		.debug_clr_cmd_addr                  = 0x0708,
		.multi_vcdt_cfg0_addr                = 0x070c,
		.cfg1_addr                           = 0x0710,
		.err_recovery_cfg0_addr              = 0x0714,
		.err_recovery_cfg1_addr              = 0x0718,
		.err_recovery_cfg2_addr              = 0x071C,
		.debug_byte_cntr_ping_addr           = 0x0720,
		.debug_byte_cntr_pong_addr           = 0x0724,
		.camif_frame_cfg_addr                = 0x0728,
		.epoch_irq_cfg_addr                  = 0x072C,
		.epoch0_subsample_ptrn_addr          = 0x0730,
		.epoch1_subsample_ptrn_addr          = 0x0734,
		.debug_camif_1_addr                  = 0x0738,
		.debug_camif_0_addr                  = 0x073C,
		.frm_drop_pattern_addr               = 0x0740,
		.frm_drop_period_addr                = 0x0744,
		.irq_subsample_pattern_addr          = 0x0748,
		.irq_subsample_period_addr           = 0x074C,
		.hcrop_addr                          = 0x0750,
		.vcrop_addr                          = 0x0754,
		.pix_drop_pattern_addr               = 0x0758,
		.pix_drop_period_addr                = 0x075C,
		.line_drop_pattern_addr              = 0x0760,
		.line_drop_period_addr               = 0x0764,
		.debug_halt_status_addr              = 0x076C,
		.debug_misr_val0_addr                = 0x0770,
		.debug_misr_val1_addr                = 0x0774,
		.debug_misr_val2_addr                = 0x0778,
		.debug_misr_val3_addr                = 0x077C,
		.format_measure_cfg0_addr            = 0x0780,
		.format_measure_cfg1_addr            = 0x0784,
		.format_measure0_addr                = 0x0788,
		.format_measure1_addr                = 0x078C,
		.format_measure2_addr                = 0x0790,
		.timestamp_curr0_sof_addr            = 0x0794,
		.timestamp_curr1_sof_addr            = 0x0798,
		.timestamp_perv0_sof_addr            = 0x079C,
		.timestamp_perv1_sof_addr            = 0x07A0,
		.timestamp_curr0_eof_addr            = 0x07A4,
		.timestamp_curr1_eof_addr            = 0x07A8,
		.timestamp_perv0_eof_addr            = 0x07AC,
		.timestamp_perv1_eof_addr            = 0x07B0,
		.batch_period_cfg_addr               = 0x07BC,
		.batch_stream_id_cfg_addr            = 0x07C0,
		.epoch0_cfg_batch_id0_addr           = 0x07C4,
		.epoch1_cfg_batch_id0_addr           = 0x07C8,
		.epoch0_cfg_batch_id1_addr           = 0x07CC,
		.epoch1_cfg_batch_id1_addr           = 0x07D0,
		.epoch0_cfg_batch_id2_addr           = 0x07D4,
		.epoch1_cfg_batch_id2_addr           = 0x07D8,
		.epoch0_cfg_batch_id3_addr           = 0x07DC,
		.epoch1_cfg_batch_id3_addr           = 0x07E0,
		.epoch0_cfg_batch_id4_addr           = 0x07E4,
		.epoch1_cfg_batch_id4_addr           = 0x07E8,
		.epoch0_cfg_batch_id5_addr           = 0x07EC,
		.epoch1_cfg_batch_id5_addr           = 0x07F0,

		/* configurations */
		.resume_frame_boundary               = 1,
		.overflow_ctrl_en                    = 1,
		.overflow_ctrl_mode_val              = 0x8,
		.mipi_pack_supported                 = 1,
		.packing_fmt_shift_val               = 15,
		.plain_alignment_shift_val           = 11,
		.plain_fmt_shift_val                 = 12,
		.crop_v_en_shift_val                 = 8,
		.crop_h_en_shift_val                 = 7,
		.drop_v_en_shift_val                 = 6,
		.drop_h_en_shift_val                 = 5,
		.early_eof_en_shift_val              = 14,
		.format_measure_en_shift_val         = 3,
		.timestamp_en_shift_val              = 6,
		.debug_byte_cntr_rst_shift_val       = 2,
		.ccif_violation_en                   = 1,
		.fatal_err_mask                      = 0x20186001,
		.non_fatal_err_mask                  = 0x12000004,
		.sof_irq_mask                        = 0x10,
		.rup_irq_mask                        = 0x800000,
		.epoch0_irq_mask                     = 0x200000,
		.epoch1_irq_mask                     = 0x400000,
		.eof_irq_mask                        = 0x8,
		.rup_aup_mask                        = 0x400040,
		.top_irq_mask                        = {0x400,},
};

static struct cam_ife_csid_ver2_path_reg_info
	cam_ife_csid_lite_880_rdi_3_reg_info = {
		.irq_status_addr                     = 0x011C,
		.irq_mask_addr                       = 0x0120,
		.irq_clear_addr                      = 0x0124,
		.irq_set_addr                        = 0x0128,
		.cfg0_addr                           = 0x0800,
		.ctrl_addr                           = 0x0804,
		.debug_clr_cmd_addr                  = 0x0808,
		.multi_vcdt_cfg0_addr                = 0x080c,
		.cfg1_addr                           = 0x0810,
		.err_recovery_cfg0_addr              = 0x0814,
		.err_recovery_cfg1_addr              = 0x0818,
		.err_recovery_cfg2_addr              = 0x081C,
		.debug_byte_cntr_ping_addr           = 0x0820,
		.debug_byte_cntr_pong_addr           = 0x0824,
		.camif_frame_cfg_addr                = 0x0828,
		.epoch_irq_cfg_addr                  = 0x082C,
		.epoch0_subsample_ptrn_addr          = 0x0830,
		.epoch1_subsample_ptrn_addr          = 0x0834,
		.debug_camif_1_addr                  = 0x0838,
		.debug_camif_0_addr                  = 0x083C,
		.frm_drop_pattern_addr               = 0x0840,
		.frm_drop_period_addr                = 0x0840,
		.irq_subsample_pattern_addr          = 0x0848,
		.irq_subsample_period_addr           = 0x084C,
		.hcrop_addr                          = 0x0850,
		.vcrop_addr                          = 0x0854,
		.pix_drop_pattern_addr               = 0x0858,
		.pix_drop_period_addr                = 0x085C,
		.line_drop_pattern_addr              = 0x0860,
		.line_drop_period_addr               = 0x0864,
		.debug_halt_status_addr              = 0x0868,
		.debug_misr_val0_addr                = 0x0870,
		.debug_misr_val1_addr                = 0x0874,
		.debug_misr_val2_addr                = 0x0878,
		.debug_misr_val3_addr                = 0x087C,
		.format_measure_cfg0_addr            = 0x0880,
		.format_measure_cfg1_addr            = 0x0884,
		.format_measure0_addr                = 0x0888,
		.format_measure1_addr                = 0x088C,
		.format_measure2_addr                = 0x0890,
		.timestamp_curr0_sof_addr            = 0x0894,
		.timestamp_curr1_sof_addr            = 0x0898,
		.timestamp_perv0_sof_addr            = 0x089C,
		.timestamp_perv1_sof_addr            = 0x08A0,
		.timestamp_curr0_eof_addr            = 0x08A4,
		.timestamp_curr1_eof_addr            = 0x08A8,
		.timestamp_perv0_eof_addr            = 0x08AC,
		.timestamp_perv1_eof_addr            = 0x08B0,
		.batch_period_cfg_addr               = 0x08BC,
		.batch_stream_id_cfg_addr            = 0x08C0,
		.epoch0_cfg_batch_id0_addr           = 0x08C4,
		.epoch1_cfg_batch_id0_addr           = 0x08C8,
		.epoch0_cfg_batch_id1_addr           = 0x08CC,
		.epoch1_cfg_batch_id1_addr           = 0x08D0,
		.epoch0_cfg_batch_id2_addr           = 0x08D4,
		.epoch1_cfg_batch_id2_addr           = 0x08D8,
		.epoch0_cfg_batch_id3_addr           = 0x08DC,
		.epoch1_cfg_batch_id3_addr           = 0x08E0,
		.epoch0_cfg_batch_id4_addr           = 0x08E4,
		.epoch1_cfg_batch_id4_addr           = 0x08E8,
		.epoch0_cfg_batch_id5_addr           = 0x08EC,
		.epoch1_cfg_batch_id5_addr           = 0x08F0,

		/* configurations */
		.resume_frame_boundary               = 1,
		.overflow_ctrl_en                    = 1,
		.overflow_ctrl_mode_val              = 0x8,
		.mipi_pack_supported                 = 1,
		.packing_fmt_shift_val               = 15,
		.plain_alignment_shift_val           = 11,
		.plain_fmt_shift_val                 = 12,
		.crop_v_en_shift_val                 = 8,
		.crop_h_en_shift_val                 = 7,
		.drop_v_en_shift_val                 = 6,
		.drop_h_en_shift_val                 = 5,
		.early_eof_en_shift_val              = 14,
		.format_measure_en_shift_val         = 3,
		.timestamp_en_shift_val              = 6,
		.debug_byte_cntr_rst_shift_val       = 2,
		.ccif_violation_en                   = 1,
		.fatal_err_mask                      = 0x20186001,
		.non_fatal_err_mask                  = 0x12000004,
		.sof_irq_mask                        = 0x10,
		.rup_irq_mask                        = 0x800000,
		.epoch0_irq_mask                     = 0x200000,
		.epoch1_irq_mask                     = 0x400000,
		.eof_irq_mask                        = 0x8,
		.rup_aup_mask                        = 0x800080,
		.top_irq_mask                        = {0x800,},
};

static struct cam_ife_csid_ver2_reg_info cam_ife_csid_lite_880_reg_info = {
	.top_irq_reg_info      = &cam_ife_csid_lite_880_top_irq_reg_info,
	.rx_irq_reg_info       = &cam_ife_csid_lite_880_rx_irq_reg_info,
	.path_irq_reg_info     = {
		&cam_ife_csid_lite_880_path_irq_reg_info[CAM_IFE_PIX_PATH_RES_RDI_0],
		&cam_ife_csid_lite_880_path_irq_reg_info[CAM_IFE_PIX_PATH_RES_RDI_1],
		&cam_ife_csid_lite_880_path_irq_reg_info[CAM_IFE_PIX_PATH_RES_RDI_2],
		&cam_ife_csid_lite_880_path_irq_reg_info[CAM_IFE_PIX_PATH_RES_RDI_3],
		NULL,
		&cam_ife_csid_lite_880_path_irq_reg_info[CAM_IFE_PIX_PATH_RES_IPP],
		},
	.buf_done_irq_reg_info = &cam_ife_csid_lite_880_buf_done_irq_reg_info,
	.cmn_reg               = &cam_ife_csid_lite_880_cmn_reg_info,
	.csi2_reg              = &cam_ife_csid_lite_880_csi2_reg_info,
	.path_reg[CAM_IFE_PIX_PATH_RES_IPP]   = &cam_ife_csid_lite_880_ipp_reg_info,
	.path_reg[CAM_IFE_PIX_PATH_RES_PPP]   = NULL,
	.path_reg[CAM_IFE_PIX_PATH_RES_RDI_0] = &cam_ife_csid_lite_880_rdi_0_reg_info,
	.path_reg[CAM_IFE_PIX_PATH_RES_RDI_1] = &cam_ife_csid_lite_880_rdi_1_reg_info,
	.path_reg[CAM_IFE_PIX_PATH_RES_RDI_2] = &cam_ife_csid_lite_880_rdi_2_reg_info,
	.path_reg[CAM_IFE_PIX_PATH_RES_RDI_3] = &cam_ife_csid_lite_880_rdi_3_reg_info,
	.need_top_cfg = 0,
	.top_irq_desc       = &cam_ife_csid_lite_880_top_irq_desc,
	.rx_irq_desc        = &cam_ife_csid_lite_880_rx_irq_desc,
	.path_irq_desc      = cam_ife_csid_lite_880_path_irq_desc,
	.num_top_err_irqs   = cam_ife_csid_lite_880_num_top_irq_desc,
	.num_rx_err_irqs    = cam_ife_csid_lite_880_num_rx_irq_desc,
	.num_path_err_irqs  = ARRAY_SIZE(cam_ife_csid_lite_880_path_irq_desc),
	.num_top_regs       = 1,
	.num_rx_regs        = 1,
	.is_ife_sfe_mapped  = true,
};
#endif /* _CAM_IFE_CSID_LITE_780_H_ */
